{"version":3,"file":"static/js/65.060912d1.chunk.js","mappings":"2QA8BA,EA3ByB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpC,GAAyCC,EAAAA,EAAAA,MAAzC,eAAOC,EAAP,KAA0BC,EAA1B,KAA0BA,UAE1B,OACE,2BACE,yBACGJ,EADH,KACWC,MAEX,oBAAQI,QAAS,kBAAMF,EAAgBJ,EAAtB,EAAjB,UACGK,EAAY,cAAgB,SAAU,KACvC,gBACEE,IAAI,sDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,eAVDV,EAeZ,E,SCrBD,GAAgB,KAAO,qBAAqB,MAAQ,uBCIrC,SAASW,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,mBAAOC,UAAWC,EAAAA,MAAlB,WACE,cAAGD,UAAWC,EAAAA,MAAd,gDACA,kBACED,UAAWC,EAAAA,MACXC,KAAK,OACLP,MAAOA,EACPQ,SAAU,SAAAC,GAAC,OAAIN,GAASO,EAAAA,EAAAA,GAAaD,EAAEE,OAAOX,OAAnC,EACXY,YAAY,gBAInB,C,aCZc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,CAAEzB,KAAM,GAAIC,OAAQ,KAAzD,eAAOyB,EAAP,KAAeC,EAAf,KAEA,GAA4BC,EAAAA,EAAAA,MAApBC,EAAR,EAAQA,KAAMzB,EAAd,EAAcA,UACd,GAA8C0B,EAAAA,EAAAA,MAA9C,eAAOC,EAAP,KAAgCC,EAAhC,KAAqB5B,UACf6B,GAASrB,EAAAA,EAAAA,IAAYC,EAAAA,IACrBqB,GAAWC,EAAAA,EAAAA,IAAoBF,EAAQJ,GAEvCO,EAAoB,SAAAhB,GACxBO,GAAU,kBAAKD,GAAN,cAAeN,EAAEiB,cAAcrC,KAAOoB,EAAEiB,cAAc1B,QAChE,EAYD,OACE,iCACE,kBAAM2B,SAZV,SAAsBlB,GACpBA,EAAEmB,iBACFL,EAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQzC,OAAS0B,EAAO1B,IAA5B,IACjB0C,EAAAA,OAAAA,QAAA,kBAA0BhB,EAAO1B,KAAjC,oBACAkC,EAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQxC,SAAWyB,EAAOzB,MAA9B,IACrByC,EAAAA,OAAAA,QAAA,8BAAsChB,EAAOzB,OAA7C,oBACA8B,EAAWL,GACfC,EAAU,CAAE3B,KAAM,GAAIC,OAAQ,IAC/B,EAIG,WACE,eAAIe,UAAU,QAAd,sBACA,qCAEE,kBACEE,KAAK,OACLlB,KAAK,OACLW,MAAOe,EAAO1B,KACdmB,SAAUiB,EACVO,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACE3B,KAAK,MACLlB,KAAK,SACLW,MAAOe,EAAOzB,OACdkB,SAAUiB,EACVO,QAAQ,yFACRC,MAAM,+IACNC,UAAQ,QAGZ,mBAAQ3B,KAAK,SAAS4B,SAAUd,EAAhC,SACGA,EAAW,YAAc,uBAI7B5B,GACC,SAAC2C,EAAA,EAAD,KAEA,8BACmB,IAAhBlB,EAAKmB,QACJ,oDAEA,iCACE,SAACtC,EAAD,KACA,wBACGwB,EAASe,KAAI,gBAAGlD,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,SAAC,EAAD,CAEEF,GAAIA,EACJC,KAAMA,EACNC,OAAQA,GAHHF,EAFK,aAe7B,C","sources":["pages/Contacts/ContactsListItem.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { useDeleteContactMutation } from 'redux/services';\nimport PropTypes from 'prop-types';\n\nconst ContactsListItem = ({ id, name, number }) => {\n  const [onDeleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <li key={id}>\n      <p>\n        {name}: {number}\n      </p>\n      <button onClick={() => onDeleteContact(id)}>\n        {isLoading ? 'Deleting...' : 'Delete'}{' '}\n        <img\n          src=\"https://img.icons8.com/fluency/344/filled-trash.png\"\n          width=\"25\"\n          height=\"25\"\n          alt=\"trash\"\n        />\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/actions';\nimport { getFilter } from 'redux/selectors';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      <p className={s.title}>Filter contacts by name or number</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        placeholder=\"Search...\"\n      />\n    </label>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/services';\nimport { getFilter, getFilteredContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport ContactsListItem from '../Contacts/ContactsListItem';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\n\nexport default function Contacts() {\n  const [params, setParams] = useState({ name: '', number: '' });\n\n  const { data, isLoading } = useGetContactsQuery();\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n  const filter = useSelector(getFilter);\n  const contacts = getFilteredContacts(filter, data);\n\n  const handleInputChange = e => {\n    setParams({ ...params, [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    contacts.some(contact => contact.name === params.name)\n      ? Notify.failure(`Contact ${params.name} already exists`)\n      : contacts.some(contact => contact.number === params.number)\n      ? Notify.failure(`Contact with number ${params.number} already exists`)\n      : addContact(params);\n    setParams({ name: '', number: '' });\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"title\">Contact</h1>\n        <label>\n          Name\n          <input\n            type=\"name\"\n            name=\"name\"\n            value={params.name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={params.number}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +. For example, +38-095-000-00-00 or 380951001010\"\n            required\n          />\n        </label>\n        <button type=\"submit\" disabled={isAdding}>\n          {isAdding ? 'Adding...' : 'Add to contacts'}\n        </button>\n      </form>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {data.length === 0 ? (\n            <h3>Contacts list is empty</h3>\n          ) : (\n            <>\n              <Filter />\n              <ul>\n                {contacts.map(({ id, name, number }) => (\n                  <ContactsListItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                  />\n                ))}\n              </ul>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["id","name","number","useDeleteContactMutation","onDeleteContact","isLoading","onClick","src","width","height","alt","Filter","value","useSelector","getFilter","dispatch","useDispatch","className","s","type","onChange","e","changeFilter","target","placeholder","Contacts","useState","params","setParams","useGetContactsQuery","data","useAddContactMutation","addContact","isAdding","filter","contacts","getFilteredContacts","handleInputChange","currentTarget","onSubmit","preventDefault","some","contact","Notify","pattern","title","required","disabled","Loader","length","map"],"sourceRoot":""}