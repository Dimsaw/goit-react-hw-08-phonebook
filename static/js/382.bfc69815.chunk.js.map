{"version":3,"file":"static/js/382.bfc69815.chunk.js","mappings":"8QACA,GAAgB,cAAgB,gCAAgC,KAAO,uBAAuB,MAAQ,wBAAwB,KAAO,uBAAuB,WAAa,6BAA6B,YAAc,8BAA8B,eAAiB,iCAAiC,IAAM,uB,SCM3R,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAtE,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgCC,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KAAiBA,UAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACdP,GAAU,kBAAKD,GAAN,cAAeH,EAAOW,IAChC,EAP8B,wCAS/B,WAA4BF,GAA5B,kFACEA,EAAEG,iBADJ,SAGyBN,EAAOH,GAHhC,OAIE,QADMU,EAHR,cAIE,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,OAAI,EAAgBC,OAClBC,QAAQC,IAAR,OAAYJ,QAAZ,IAAYA,GAAZ,UAAYA,EAAUC,YAAtB,aAAY,EAAgBC,OAC5BG,EAAAA,OAAAA,QAAA,mBACAC,MAEAD,EAAAA,OAAAA,QAAA,iCACAd,GAAU,kBAAKD,GAAN,IAAcD,SAAU,OAVrC,4CAT+B,sBAuB/B,IAAMiB,EAAQ,WACZf,EAAU,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC5C,EACD,OACE,iBAAMkB,UAAWC,EAAAA,cAAjB,UACE,kBAAMD,UAAWC,EAAAA,KAAQC,SA5BE,4CA4B3B,WACE,eAAIF,UAAWC,EAAAA,KAAf,kCAEA,mBAAOD,UAAWC,EAAAA,MAAlB,WACE,iBAAMD,UAAWC,EAAAA,WAAjB,mBAEA,kBACED,UAAWC,EAAAA,MACXE,KAAK,OACLvB,KAAK,OACLW,MAAOR,EAAOH,KACdwB,SAAUhB,EACViB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOP,UAAWC,EAAAA,MAAlB,WACE,iBAAMD,UAAWC,EAAAA,YAAjB,oBAEA,kBACED,UAAWC,EAAAA,MACXE,KAAK,QACLvB,KAAK,QACLW,MAAOR,EAAOF,MACduB,SAAUhB,EACVmB,UAAQ,QAGZ,mBAAOP,UAAWC,EAAAA,MAAlB,WACE,iBAAMD,UAAWC,EAAAA,eAAjB,uBAEA,kBACED,UAAWC,EAAAA,MACXE,KAAK,WACLvB,KAAK,WACLW,MAAOR,EAAOD,SACdsB,SAAUhB,EACViB,QAAQ,QACRC,MAAM,kCACNC,UAAQ,QAGZ,mBAAQP,UAAWC,EAAAA,IAAOE,KAAK,SAASK,SAAUrB,EAAlD,SACGA,EAAY,aAAe,eAKrC,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"Register_mainContainer__cD3E7\",\"form\":\"Register_form__c8aUa\",\"label\":\"Register_label__KQhFe\",\"text\":\"Register_text__L89ak\",\"text__name\":\"Register_text__name__jVxUt\",\"text__email\":\"Register_text__email__sGfaJ\",\"text__password\":\"Register_text__password__g5xU4\",\"btn\":\"Register_btn__Od0XL\"};","import { useState } from 'react';\nimport { useSignUpMutation } from 'redux/services';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport s from './Register.module.css';\n\nexport default function SignUp() {\n  const [params, setParams] = useState({ name: '', email: '', password: '' });\n  const [signUp, { isLoading }] = useSignUpMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setParams({ ...params, [name]: value });\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    const response = await signUp(params);\n    if (response?.data?.token) {\n      console.log(response?.data?.token);\n      Notify.success(`Sign up success`);\n      reset();\n    } else {\n      Notify.warning(`Check your info and try again`);\n      setParams({ ...params, password: '' });\n    }\n  }\n\n  const reset = () => {\n    setParams({ name: '', email: '', password: '' });\n  };\n  return (\n    <main className={s.mainContainer}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <h1 className={s.text}>Create your account</h1>\n\n        <label className={s.label}>\n          <span className={s.text__name}>Name</span>\n\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={params.name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          <span className={s.text__email}>Email</span>\n\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            value={params.email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label className={s.label}>\n          <span className={s.text__password}>Password</span>\n\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            value={params.password}\n            onChange={handleChange}\n            pattern=\".{7,}\"\n            title=\"At least 7 characters in length\"\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Loading...' : 'Accept'}\n        </button>\n      </form>\n    </main>\n  );\n}\n"],"names":["SignUp","useState","name","email","password","params","setParams","useSignUpMutation","signUp","isLoading","handleChange","e","currentTarget","value","preventDefault","response","data","token","console","log","Notify","reset","className","s","onSubmit","type","onChange","pattern","title","required","disabled"],"sourceRoot":""}